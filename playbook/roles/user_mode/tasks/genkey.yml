- include_tasks: vars.yml

- name: create key for {{ user_account }}
  user:
    name: '{{ user_account }}'
    generate_ssh_key: yes
    ssh_key_comment : '{{ key_comment }}'
    ssh_key_type: rsa
    ssh_key_bits: 4096
    ssh_key_file: .ssh/id_rsa

- name: backup authorized_keys
  copy:
    src: '{{ ssh_dir }}/authorized_keys'
    dest: '{{ ssh_dir }}/authorized_keys.{{ key_comment }}'
    remote_src: yes

- name: public key stat
  stat: 
    path: "{{ ssh_dir }}/id_rsa.pub"
  register: pubkey_result

- name: update authorized_keys
  shell: "cat {{ ssh_dir }}/id_rsa.pub >> {{ ssh_dir }}/authorized_keys"
  when: pubkey_result.stat.exists

- include_tasks: fetch.yml

- name: erase expired public key
  lineinfile:
    dest: "{{ ssh_dir }}/authorized_keys"
    regexp: "{{ exp_date }}"
    state: absent

- include_tasks: cleanup.yml